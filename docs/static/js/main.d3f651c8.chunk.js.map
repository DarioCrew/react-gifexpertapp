{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","props","useState","inputValue","setInputValue","onSubmit","ev","preventDefault","trim","length","setCategories","cats","type","value","onChange","target","protoType","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAACC,GAExB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAGC,iBAECJ,EAAWK,OAAOC,OAAS,IAC3BR,EAAMS,eAAe,SAAAC,GAAI,OAAKR,GAAL,mBAAmBQ,OAC5CP,EAAc,MAMlB,SACI,uBACIQ,KAAK,OACLC,MAASV,EACTW,SAnBc,SAACR,GACvBF,EAAcE,EAAGS,OAAOF,aAwBhCb,EAAYgB,UAAY,CACpBN,cAAeO,IAAUC,KAAKC,Y,mCCjCrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACH,mCACF,GACRC,EAHa,iDAGoCC,UAAUH,GAH9C,kBAEL,GAFK,oBACH,oCADG,SAKAI,MAAOF,GALP,cAKbG,EALa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAG,YAAK,CAC3BC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXnB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAAnBJ,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAEnC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECHwB,SAACA,GAEzB,MAAyBnB,mBAAS,CAC9B0B,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAaC,EAAb,KAeA,OAVAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAEGqB,EDdwBK,CAAc1B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAEnDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAACkB,GAAD,OACR,cAAC,EAAD,eAEQA,GADCA,EAAIhB,aEWtBiB,EAxBM,WAGjB,MAAoC/C,mBAAS,CAAC,cAA9C,mBAAOgD,EAAP,KAAmBxC,EAAnB,KAEA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQwC,EAAWpB,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAEIA,SAAUA,EAFd,SAEyBA,GADhBA,Y,MCdjC8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.d3f651c8.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = (props) => {\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const handleInputChange = (ev) => {\r\n        setInputValue(ev.target.value);\r\n    }\r\n\r\n    const handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            props.setCategories( cats => [inputValue,...cats]);\r\n            setInputValue(\"\")\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value = {inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.protoType = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async( category ) => {\r\n    const api_key = \"x93macoFKBrpXiNxFuJ3urleuX97Q6wc\";\r\n    const limit = 10\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=${limit}&api_key=${api_key}`\r\n    \r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map( gif => ({\r\n        id: gif.id,\r\n        title: gif.title,\r\n        url: gif.images?.downsized_medium.url,\r\n    }));\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id,title,url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect,useState } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\" >{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\" >Loading...</p>}\r\n\r\n            <div className=\"card-grid\" >\r\n                {\r\n                    images.map( (img) => (\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ) )\r\n                }\r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state,setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            } )\r\n    }, [category])\r\n\r\n    return state\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const [categories, setCategories] = useState([\"One Punch\", \"Samurai X\", \"Drangol Ball\"]);\r\n    const [categories, setCategories] = useState([\"One Punch\"]);\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map((category) => (\r\n                        <GifGrid \r\n                            key={category} \r\n                            category={category}>{category}\r\n                        </GifGrid>\r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}